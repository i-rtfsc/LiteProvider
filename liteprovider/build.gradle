apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion gradle.compileSdkVersion

    defaultConfig {
        minSdkVersion gradle.minSdkVersion
        targetSdkVersion gradle.targetVersion
        versionCode gradle.versionCode
        versionName gradle.versionName
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // This is important, it will run lint checks but won't abort build
    lintOptions {
        abortOnError false
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            //res.srcDirs = ['res']
            main.java.srcDirs = ['src']
        }
    }

    task makeJar(type: Copy) {
        delete 'build/libs/liteprovider.jar'
        from('build/intermediates/bundles/release/')
        into('build/libs/')
        include('classes.jar')
        rename('classes.jar', 'liteprovider.jar')
    }
    makeJar.dependsOn(build)
}

dependencies {
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

group = "com.journeyOS"
version = "1.0.1"

def siteUrl = 'https://github.com/journeyOS/LiteProvider.git'
def gitUrl = 'git@github.com:journeyOS/LiteProvider.git'

install {
    repositories.mavenInstaller {

        pom {
            project {
                packaging 'jar'
                name 'LiteProvider'
                url siteUrl
                description = 'GlobalsProvider is a SharedPreferences implementation using ContentProvider.'

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "LiteProvider"
        name = "liteprovider"    //发布到JCenter上的项目名字
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
//    version {
//        vcsTag = '1.0.0'
//    }
}
